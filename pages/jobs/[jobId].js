import React, { useState, useEffect, useCallback } from "react";
import Head from "next/head";
import Banner from "../../components/Banner";
import Header from "../../components/Header";
import Jobs from "../../public/data.json";
import JobTitleBar from "../../components/JobTitleBar";
import ButtonPrimary from "../../components/UI/ButtonPrimary";

const Page = (props) => {
  return (
    <div className={` flex h-screen flex-col`}>
      <div className='bg-lightgray transition-colors duration-300 ease-in-out dark:bg-midnight'>
        <Head>
          <title>devjobs</title>
          <meta name='description' content='Generated by create next app' />
          <link rel='icon' href='/assets/favicon-32x32.png' />
        </Head>

        <Banner />
        <Header />
        <JobTitleBar data={props.projectData} />

        {/* SEARCH RESULTS */}
        <main className='mx-auto mt-6 mb-16 max-w-[810px] px-6 md:mb-[52px] md:px-10 lg:mb-20'>
          <div className='rounded-md bg-white p-6 md:p-12'>
            <div className='flex flex-col sm:flex-row sm:items-center sm:justify-between'>
              <div className='mb-[50px] sm:mb-0'>
                <div className='flex items-center space-x-3'>
                  <p className='leading-[20px] text-darkgray'>
                    {props.projectData.postedAt}
                  </p>
                  <div className='h-1 w-1 rounded-full bg-darkgray'></div>
                  <p className='leading-[20px] text-darkgray'>
                    {props.projectData.contract}
                  </p>
                </div>

                <h3 className='mt-2 cursor-pointer hover:text-darkgray dark:text-white'>
                  {props.projectData.position}
                </h3>

                <h4 className='mt-2 text-violet'>
                  {props.projectData.location}
                </h4>
              </div>
              <ButtonPrimary href={props.projectData.apply}>
                Apply Now
              </ButtonPrimary>
            </div>
            <p className='mt-8 text-darkgray md:mt-10'>
              {props.projectData.description}
            </p>
            <h3 className='mt-[66px] dark:text-white md:mt-10'>Requirements</h3>
            <p className='mt-6 mb-8 text-darkgray md:mb-6'>
              {props.projectData.requirements.content}
            </p>
            <ul className='list-outside list-disc space-y-2 pl-4 text-darkgray'>
              {props.projectData.requirements.items.map((item) => (
                <li className='pl-5'>{item}</li>
              ))}
            </ul>
            <h3 className='mt-10 dark:text-white md:mt-12'>What you will do</h3>
            <p className='mt-6 mb-8 text-darkgray md:mb-6'>
              {props.projectData.role.content}
            </p>
            <ul className='list-outside list-disc space-y-2 pl-4 text-darkgray'>
              {props.projectData.role.items.map((item) => (
                <li className='pl-5'>{item}</li>
              ))}
            </ul>
          </div>
        </main>
      </div>
      <div className='flex-auto bg-lightgray transition-colors duration-300 ease-in-out dark:bg-midnight'></div>
    </div>
  );
};

export default Page;

export async function getStaticPaths() {
  const paths = Jobs.map((post) => ({
    params: { jobId: post.id.toString() },
  }));

  return {
    fallback: false,
    paths,
  };
}

export async function getStaticProps(context) {
  const jobId = context.params.jobId;
  // console.log(context.query);

  const selectedProject = Jobs.find(({ id }) => id == jobId);

  return {
    props: {
      projectData: selectedProject,
    },
  };
}
